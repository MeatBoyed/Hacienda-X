generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id      String   @unique    @default(cuid())
  public_id   String   @unique
  email        String?  
  Ad           Ad[]
  analytics    Analytics[]
  nvoices      Invoice[]
  leads      Lead[]
  properties     Property[]
  // Subscriptions Subscription[]
  role         Role   @default(viewer)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@id([user_id, public_id])
}

model Subscription {
  subscription_id Int      @id @default(autoincrement())
  user_id         String
  start_date      DateTime
  end_date        DateTime
  plan_type       String
  payment_status  String
  // user            User     @relation(fields: [user_id], references: [user_id])
}

model Property {
  property_id String   @id @default(cuid())
  agent_id    String
  title       String
  description String
  price       Float
  latitude    Float
  longitude   Float
  address     String
  bathrooms   Int
  city        String
  country     String
  pool        Boolean  @default(false)
  bedrooms    Int
  extraFeatures String[]
  saleType    SaleType
  sold        Boolean @default(false)
  images      String[]
  visibility  Visibility @default(Public)
  agent       User     @relation(fields: [agent_id], references: [public_id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// Direct Link to User, as User's accounts must never be deleted for data integrity
// Always save the Clerk Public ID for relations
model Lead {
  lead_id       Int      @id @default(autoincrement())
  user_id       String
  property_id   String
  message       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [user_id], references: [public_id])
}

model Analytics {
  analytics_id Int      @id @default(autoincrement())
  agent_id     String
  graph_type   String
  data_points  String
  timestamp    DateTime @default(now())
  agent        User     @relation(fields: [agent_id], references: [public_id])
}

model Ad {
  ad_id           Int      @id @default(autoincrement())
  agent_id        String
  ad_title        String
  ad_content      String
  ad_type         String
  creation_date   DateTime
  expiration_date DateTime
  agent           User     @relation(fields: [agent_id], references: [public_id])
}

model Invoice {
  invoice_id     Int       @id @default(autoincrement())
  agent_id       String
  invoice_date   DateTime
  invoice_amount Float
  payment_status String
  payment_date   DateTime?
  agent          User      @relation(fields: [agent_id], references: [public_id])
}

model PropertyCategory {
  category_id        Int    @id @default(autoincrement())
  category_name      String
  parent_category_id Int?
}

model Language {
  language_id   Int    @id @default(autoincrement())
  language_name String
  language_code String
}

enum Role {
  agent
  user
  viewer
  admin
  dev
}

enum Visibility {
  Public
  Private
  Draft
  Deleted
}

enum SaleType {
  Sale
  Rent
  Auction
}