generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id   String @unique @default(cuid())
  public_id String @unique // Clerk's provided Public Id

  // Core Data
  email String?
  role  Role    @default(viewer) // Default User is a normal Viewer

  // Relations
  Ad         Ad[]
  analytics  Analytics[]
  nvoices    Invoice[]
  leads      Lead[]
  properties Property[]
  // Subscriptions Subscription[]

  // Meta
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([user_id, public_id])
}

model Subscription {
  subscription_id Int      @id @default(autoincrement())
  user_id         String
  start_date      DateTime
  end_date        DateTime
  plan_type       String
  payment_status  String
}

model Property {
  property_id String @id @default(cuid()) // form
  agent_id    String // API attach

  // Core
  title       String // form
  description String // form
  price       Float // form

  bathrooms     Int // form
  bedrooms      Int // form
  pool          Boolean  @default(false) // form
  extraFeatures String[] // form
  squareMeter   Int? //form
  images        String[] // API attach

  // Sales Data
  saleType SaleType // For Rent or For Sale  // form
  sold     Boolean  @default(false) // API attach

  // Meta 2
  visibility Visibility @default(Public) // form
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  //  Relations
  Address Address? // form
  agent   User     @relation(fields: [agent_id], references: [public_id])
}

model Address {
  address_id String @id @default(cuid())

  address   String
  latitude  Float
  longitude Float

  // Relationship
  property_id String   @unique
  property    Property @relation(fields: [property_id], references: [property_id])
}

// Direct Link to User, as User's accounts must never be deleted for data integrity
// Always save the Clerk Public ID for relations
model Lead {
  lead_id     String    @id @default(cuid())
  property_id String

  name        String
  surname     String
  email       String
  phoneNumber String
  message     String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  customer_id   String?

  agent_id  String
  agent     User  @relation(fields: [agent_id], references: [public_id])
}

model Analytics {
  analytics_id Int      @id @default(autoincrement())
  agent_id     String
  graph_type   String
  data_points  String
  timestamp    DateTime @default(now())
  agent        User     @relation(fields: [agent_id], references: [public_id])
}

model Ad {
  ad_id           Int      @id @default(autoincrement())
  agent_id        String
  ad_title        String
  ad_content      String
  ad_type         String
  creation_date   DateTime
  expiration_date DateTime
  agent           User     @relation(fields: [agent_id], references: [public_id])
}

model Invoice {
  invoice_id     Int       @id @default(autoincrement())
  agent_id       String
  invoice_date   DateTime
  invoice_amount Float
  payment_status String
  payment_date   DateTime?
  agent          User      @relation(fields: [agent_id], references: [public_id])
}

model PropertyCategory {
  category_id        Int    @id @default(autoincrement())
  category_name      String
  parent_category_id Int?
}

model Language {
  language_id   Int    @id @default(autoincrement())
  language_name String
  language_code String
}

enum Role {
  agent
  user
  viewer
  admin
  dev
}

enum Visibility {
  Public
  Private
  Draft
  Deleted
}

enum SaleType {
  Sale
  Rent
  Auction
}
