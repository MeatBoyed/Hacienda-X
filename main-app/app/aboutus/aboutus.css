.v-container .image-container {
  border: 8px solid rgb(232 232 232 / 93%);
}
.v-container > div {
  flex: 1;
}
.v-right {
  gap: 0.5rem;
}
.accordion {
  margin-top: 2rem;
  border: none;
}
.accordionItem {
  background: white;
  border: 0.8px solid rgba(128, 128, 128, 0.143);
  border-radius: 8px;
  overflow: hidden;
  margin-bottom: 20px;
}

.accordionItem.expanded {
  box-shadow: var(--shadow);
  border-radius: 6px;
}
.accordionButton {
  background: white;
  padding: 1rem;
  width: 100%;
  justify-content: space-between;
  cursor: pointer;
}

.icon {
  padding: 10px;
  background: #eeeeff;
  border-radius: 5px;
}
.icon svg {
  fill: var(--blue);
}
article {
  --img-scale: 1.001;
  --title-color: black;
  --link-icon-translate: -20px;
  --link-icon-opacity: 0;
  position: relative;
  border-radius: 16px;
  box-shadow: none;
  background: #fff;
  transform-origin: center;
  transition: all 0.4s ease-in-out;
  overflow: hidden;
  margin-top: 40px;
  margin-bottom: 100px;
}

article a::after {
  position: absolute;
  inset-block: 0;
  inset-inline: 0;
  cursor: pointer;
  content: "";
}

/* basic article elements styling */
article h2 {
  margin: 0 0 18px 0;
  font-family: Arial, sans-serif; /* Changed font family */
  font-size: 1.9rem;
  font-style: normal;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  letter-spacing: 0em;
  color: var(--title-color);
  transition: color 0.3s ease-out;
}

article p {
  font-size: medium;
  display: flex;
  justify-content: center;
  align-items: center;
  align-content: center;
  text-align: center;
}

/* Button styling */
.button1 {
  display: inline-block;
  padding: 2px 1px 2px 1px;

  display: flex;
  justify-content: center;
  align-items: center;
  align-content: center;
  margin-left: 80px;
  width: fit-content;
  padding-left: 25px;
  padding-bottom: 0px;
  margin-top: 10px;
  background-color: #213a69; /* Button background color */
  color: #fff; /* Button text color */
  font-family: Arial, sans-serif; /* Button font family */
  font-size: 1rem; /* Button font size */
  text-decoration: none;
  border-radius: 4px;
  transition: background-color 0.3s ease;
}

.button1:hover {
  background-color: #0e75b1; /* Hover color */
}

figure {
  margin: 0;
  padding: 0;
  aspect-ratio: 16 / 9;
  overflow: hidden;
}

article img {
  max-width: 100%;
  transform-origin: center;
  transform: scale(var(--img-scale));
  transition: transform 0.4s ease-in-out;
}

.article-body {
  padding: 24px;
}

article a {
  display: inline-flex;
  align-items: center;
  text-decoration: none;
  color: #213a69;
}

article a:focus {
  outline: 1px dotted #1c459e;
}

article a .icon {
  min-width: 24px;
  width: 3px;
  height: 3px;
  margin-left: 5px;
  transform: translateX(var(--link-icon-translate));
  opacity: var(--link-icon-opacity);
  transition: all 0.3s;
}

/* using the has() relational pseudo selector to update our custom properties */
article:has(:hover, :focus) {
  --img-scale: 1.1;
  --title-color: #213a69;
  --link-icon-translate: 0;
  --link-icon-opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,
    rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;
}

/************************ 
  Generic layout (demo looks)
  **************************/

*,
*::before,
*::after {
  box-sizing: border-box;
}

.articles {
  display: grid;
  max-width: 1200px;
  margin-inline: auto;
  padding-inline: 24px;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: 24px;
}

@media screen and (max-width: 960px) {
  article {
    container: card/inline-size;
  }
  .article-body p {
    display: none;
  }
}

@container card (min-width: 380px) {
  .article-wrapper {
    display: grid;
    grid-template-columns: 100px 1fr;
    gap: 16px;
  }
  .article-body {
    padding-left: 0;
  }
  figure {
    width: 100%;
    height: 100%;
    overflow: hidden;
  }
  figure img {
    height: 100%;
    aspect-ratio: 1;
    object-fit: cover;
  }
}

.sr-only:not(:focus):not(:active) {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.accordionButton .primaryText {
  font-size: 1.1rem;
}

@media (max-width: 1024px) {
  .v-container {
    flex-direction: column;
  }
}

@media (max-width: 768px) {
  .accordionButton .primaryText {
    font-size: 0.8rem;
  }
}
